package config

import (
	"fmt"
	"os"
	"path"
	"scan2epub/utils"

	ini "gopkg.in/ini.v1"
)

var home, _ = os.UserHomeDir()

var (
	NAME           = "scan2epub"
	VERSION        = "1.6.0"
	CONFIG_DIR     = path.Join(home, ".config", "scan2epub")
	CONFIG_FILE    = path.Join(CONFIG_DIR, "config.ini")
	LOG_FILE       = path.Join(CONFIG_DIR, "log")
	AVAILABLE_EXT  = []string{"jpg", "jpeg", "png", "webp"}
	CONFIG_INI     *ini.File
	CONFIG_EXEMPLE = `default="onepiece"

[onepiece]
name="One Piece"
author="Echiro Oda"
url="https://lelscans.net/mangas/one-piece/{chap}/{page}.{ext}"
epub_dir="` + path.Join(home, "scan2epub") + `"
file_name="{author} - {name} {chap}.epub"
description="Scan of One Piece generated by scan2epub"

start_at=0
format=true
create_dir_per_file=true
cron="* * * * *"
cron_chap=1132`
)

func InitConfig() error {
	tmpName, err := os.MkdirTemp("", "scan2epub")
	if err != nil {
		return err
	}

	os.Setenv("TMP_DIR", tmpName)

	if !utils.FileExist(CONFIG_DIR) {
		if err := os.MkdirAll(CONFIG_DIR, 0755); err != nil {
			return err
		}
		fmt.Printf("Config dir created at %s\n", CONFIG_DIR)
	}

	if !utils.FileExist(CONFIG_FILE) {
		if err := os.WriteFile(CONFIG_FILE, []byte(CONFIG_EXEMPLE), 0644); err != nil {
			return err
		}
		fmt.Printf("Config file created at %s\n", CONFIG_FILE)
	}

	if !utils.FileExist(LOG_FILE) {
		if _, err := os.Create(LOG_FILE); err != nil {
			return err
		}
		fmt.Printf("Log file created at %s\n", LOG_FILE)
	}

	os.Setenv("LOG_FILE", LOG_FILE)

	return nil
}

func InitEpubDir() error {
	defaultSource := CONFIG_INI.Section("").Key("default").String()
	epubDir := CONFIG_INI.Section(defaultSource).Key("epub_dir").String()

	if !utils.FileExist(epubDir) {
		if err := os.MkdirAll(epubDir, 0755); err != nil {
			return err
		}
		fmt.Printf("Epub dir created at %s\n", epubDir)
	}

	return nil
}
